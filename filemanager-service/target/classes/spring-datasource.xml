<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.3.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

    <!--引入外部文件-->
    <context:property-placeholder location="classpath:jdbcpool.properties"/>

    <!--c3p0-->
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass">
            <value>${c3p0.driverClass}</value>
        </property>
        <property name="jdbcUrl">
            <value>${c3p0.jdbcUrl}</value>
        </property>
        <property name="user">
            <value>${c3p0.user}</value>
        </property>
        <property name="password">
            <value>${c3p0.password}</value>
        </property>
        <property name="testConnectionOnCheckout">
            <value>${c3p0.testConnectionOnCheckout}</value>
        </property>
        <property name="acquireIncrement">
            <value>${c3p0.acquireIncrement}</value>
        </property>
        <property name="initialPoolSize">
            <value>${c3p0.initialPoolSize}</value>
        </property>
        <property name="minPoolSize">
            <value>${c3p0.minPoolSize}</value>
        </property>
        <property name="maxPoolSize">
            <value>${c3p0.maxPoolSize}</value>
        </property>
        <property name="maxIdleTime">
            <value>${c3p0.maxIdleTime}</value>
        </property>
        <property name="acquireRetryDelay">
            <value>${c3p0.acquireRetryDelay}</value>
        </property>
        <property name="acquireRetryAttempts">
            <value>${c3p0.acquireRetryAttempts}</value>
        </property>
        <property name="unreturnedConnectionTimeout">
            <value>${c3p0.unreturnedConnectionTimeout}</value>
        </property>
    </bean>

    <!--mybatis-配置sqlsessionFactory，spring会自动扫描映射文件所在的路径-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--自动扫描mapping.xml文件-->
        <property name="mapperLocations">
            <value>classpath*:edu/xnxy/caojx/filemanager/dao/mapper/*.xml</value>
        </property>
    </bean>

    <!--mybatis-DAO接口所在包名，Spring会自动扫描其下的类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="edu.xnxy.caojx.filemanager.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 设置事物属性 -->
        <tx:attributes>
            <!-- 设置各种方法的
                propagation 为传播行为
                isolation 事务的隔离级别
                read-only 设置之都属性
                rollback-for 发生生么异常回滚
                no-rollback-for 发生那些异常不回滚
                -->
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />
            <tx:method name="save*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
            <tx:method name="remove*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
        </tx:attributes>
    </tx:advice>

    <!-- 配置AOP -->
    <aop:config>
        <!-- 配置切入点,表示切入点为所有的service类下的所有方法 -->
        <aop:pointcut
                expression="execution(* edu.xnxy.caojx.filemanager.service..*.*(..))"
                id="pointcut" ></aop:pointcut>
        <!-- 配置切面,表示切入点pointcut下的所有方法都使用txAdivice增强 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
    </aop:config>
</beans>